/*
 * Watson Assistant v2
 *
 * The IBM Watson&trade; Assistant service combines machine learning, natural language understanding, and an integrated dialog editor to create conversation flows between your apps and your users.  The Assistant v2 API provides runtime methods your client application can use to send user input to an assistant and receive a response.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DialogNodeAction {
    /// The name of the action.
    #[serde(rename = "name")]
    pub name: String,
    /// The type of action to invoke.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// A map of key/value pairs to be provided to the action.
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// The location in the dialog context where the result of the action is stored.
    #[serde(rename = "result_variable")]
    pub result_variable: String,
    /// The name of the context variable that the client application will use to pass in credentials for the action.
    #[serde(rename = "credentials", skip_serializing_if = "Option::is_none")]
    pub credentials: Option<String>,
}

impl DialogNodeAction {
    pub fn new(name: String, result_variable: String) -> DialogNodeAction {
        DialogNodeAction {
            name,
            _type: None,
            parameters: None,
            result_variable,
            credentials: None,
        }
    }
}

/// The type of action to invoke.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "client")]
    Client,
    #[serde(rename = "server")]
    Server,
    #[serde(rename = "web-action")]
    WebAction,
    #[serde(rename = "cloud-function")]
    CloudFunction,
}

