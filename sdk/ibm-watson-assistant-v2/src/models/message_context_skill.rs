/*
 * Watson Assistant v2
 *
 * The IBM Watson&trade; Assistant service combines machine learning, natural language understanding, and an integrated dialog editor to create conversation flows between your apps and your users.  The Assistant v2 API provides runtime methods your client application can use to send user input to an assistant and receive a response.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MessageContextSkill : Contains information specific to a particular skill used by the Assistant. The property name must be the same as the name of the skill (for example, `main skill`).



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessageContextSkill {
    /// Arbitrary variables that can be read and written by a particular skill.
    #[serde(rename = "user_defined", skip_serializing_if = "Option::is_none")]
    pub user_defined: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "system", skip_serializing_if = "Option::is_none")]
    pub system: Option<crate::models::MessageContextSkillSystem>,
}

impl MessageContextSkill {
    /// Contains information specific to a particular skill used by the Assistant. The property name must be the same as the name of the skill (for example, `main skill`).
    pub fn new() -> MessageContextSkill {
        MessageContextSkill {
            user_defined: None,
            system: None,
        }
    }
}


