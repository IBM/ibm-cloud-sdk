/*
 * Watson Assistant v2
 *
 * The IBM Watson&trade; Assistant service combines machine learning, natural language understanding, and an integrated dialog editor to create conversation flows between your apps and your users.  The Assistant v2 API provides runtime methods your client application can use to send user input to an assistant and receive a response.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MessageOutputDebug : Additional detailed information about a message response and how it was generated.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessageOutputDebug {
    /// An array of objects containing detailed diagnostic information about the nodes that were triggered during processing of the input message. 
    #[serde(rename = "nodes_visited", skip_serializing_if = "Option::is_none")]
    pub nodes_visited: Option<Vec<crate::models::DialogNodesVisited>>,
    /// An array of up to 50 messages logged with the request.
    #[serde(rename = "log_messages", skip_serializing_if = "Option::is_none")]
    pub log_messages: Option<Vec<crate::models::DialogLogMessage>>,
    /// Assistant sets this to true when this message response concludes or interrupts a dialog.
    #[serde(rename = "branch_exited", skip_serializing_if = "Option::is_none")]
    pub branch_exited: Option<bool>,
    /// When `branch_exited` is set to `true` by the Assistant, the `branch_exited_reason` specifies whether the dialog completed by itself or got interrupted.
    #[serde(rename = "branch_exited_reason", skip_serializing_if = "Option::is_none")]
    pub branch_exited_reason: Option<BranchExitedReason>,
    /// For internal use only.
    #[serde(rename = "auto_learn", skip_serializing_if = "Option::is_none")]
    pub auto_learn: Option<serde_json::Value>,
}

impl MessageOutputDebug {
    /// Additional detailed information about a message response and how it was generated.
    pub fn new() -> MessageOutputDebug {
        MessageOutputDebug {
            nodes_visited: None,
            log_messages: None,
            branch_exited: None,
            branch_exited_reason: None,
            auto_learn: None,
        }
    }
}

/// When `branch_exited` is set to `true` by the Assistant, the `branch_exited_reason` specifies whether the dialog completed by itself or got interrupted.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BranchExitedReason {
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "fallback")]
    Fallback,
}

