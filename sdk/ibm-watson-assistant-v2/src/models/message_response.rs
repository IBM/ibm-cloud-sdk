/*
 * Watson Assistant v2
 *
 * The IBM Watson&trade; Assistant service combines machine learning, natural language understanding, and an integrated dialog editor to create conversation flows between your apps and your users.  The Assistant v2 API provides runtime methods your client application can use to send user input to an assistant and receive a response.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MessageResponse : A response from the Watson Assistant service.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessageResponse {
    #[serde(rename = "output")]
    pub output: Box<crate::models::MessageOutput>,
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<Box<crate::models::MessageContext>>,
    /// A string value that identifies the user who is interacting with the assistant. The client must provide a unique identifier for each individual end user who accesses the application. For user-based plans, this user ID is used to identify unique users for billing purposes. This string cannot contain carriage return, newline, or tab characters. If no value is specified in the input, **user_id** is automatically set to the value of **context.global.session_id**.  **Note:** This property is the same as the **user_id** property in the global system context.
    #[serde(rename = "user_id")]
    pub user_id: String,
}

impl MessageResponse {
    /// A response from the Watson Assistant service.
    pub fn new(output: crate::models::MessageOutput, user_id: String) -> MessageResponse {
        MessageResponse {
            output: Box::new(output),
            context: None,
            user_id,
        }
    }
}


