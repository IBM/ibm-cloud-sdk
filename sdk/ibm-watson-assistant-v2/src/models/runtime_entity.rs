/*
 * Watson Assistant v2
 *
 * The IBM Watson&trade; Assistant service combines machine learning, natural language understanding, and an integrated dialog editor to create conversation flows between your apps and your users.  The Assistant v2 API provides runtime methods your client application can use to send user input to an assistant and receive a response.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// RuntimeEntity : The entity value that was recognized in the user input.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RuntimeEntity {
    /// An entity detected in the input.
    #[serde(rename = "entity")]
    pub entity: String,
    /// An array of zero-based character offsets that indicate where the detected entity values begin and end in the input text.
    #[serde(rename = "location")]
    pub location: Vec<i32>,
    /// The term in the input text that was recognized as an entity value.
    #[serde(rename = "value")]
    pub value: String,
    /// A decimal percentage that represents Watson's confidence in the recognized entity.
    #[serde(rename = "confidence", skip_serializing_if = "Option::is_none")]
    pub confidence: Option<f32>,
    /// Any metadata for the entity.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// The recognized capture groups for the entity, as defined by the entity pattern.
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<crate::models::CaptureGroup>>,
    #[serde(rename = "interpretation", skip_serializing_if = "Option::is_none")]
    pub interpretation: Option<Box<crate::models::RuntimeEntityInterpretation>>,
    /// An array of possible alternative values that the user might have intended instead of the value returned in the **value** property. This property is returned only for `@sys-time` and `@sys-date` entities when the user's input is ambiguous.  This property is included only if the new system entities are enabled for the skill.
    #[serde(rename = "alternatives", skip_serializing_if = "Option::is_none")]
    pub alternatives: Option<Vec<crate::models::RuntimeEntityAlternative>>,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<Box<crate::models::RuntimeEntityRole>>,
}

impl RuntimeEntity {
    /// The entity value that was recognized in the user input.
    pub fn new(entity: String, location: Vec<i32>, value: String) -> RuntimeEntity {
        RuntimeEntity {
            entity,
            location,
            value,
            confidence: None,
            metadata: None,
            groups: None,
            interpretation: None,
            alternatives: None,
            role: None,
        }
    }
}


