/*
 * Watson Assistant v2
 *
 * The IBM Watson&trade; Assistant service combines machine learning, natural language understanding, and an integrated dialog editor to create conversation flows between your apps and your users.  The Assistant v2 API provides runtime methods your client application can use to send user input to an assistant and receive a response.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchResult {
    /// The unique identifier of the document in the Discovery service collection.  This property is included in responses from search skills, which are available only to Plus or Enterprise plan users.
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "result_metadata")]
    pub result_metadata: Box<crate::models::SearchResultMetadata>,
    /// A description of the search result. This is taken from an abstract, summary, or highlight field in the Discovery service response, as specified in the search skill configuration.
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    /// The title of the search result. This is taken from a title or name field in the Discovery service response, as specified in the search skill configuration.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// The URL of the original data object in its native data source.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "highlight", skip_serializing_if = "Option::is_none")]
    pub highlight: Option<crate::models::SearchResultHighlight>,
    /// An array specifying segments of text within the result that were identified as direct answers to the search query. Currently, only the single answer with the highest confidence (if any) is returned.  **Note:** This property uses the answer finding beta feature, and is available only if the search skill is connected to a Discovery v2 service instance.
    #[serde(rename = "answers", skip_serializing_if = "Option::is_none")]
    pub answers: Option<Vec<crate::models::SearchResultAnswer>>,
}

impl SearchResult {
    pub fn new(id: String, result_metadata: crate::models::SearchResultMetadata) -> SearchResult {
        SearchResult {
            id,
            result_metadata: Box::new(result_metadata),
            body: None,
            title: None,
            url: None,
            highlight: None,
            answers: None,
        }
    }
}


